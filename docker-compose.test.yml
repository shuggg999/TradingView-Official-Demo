services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cryptoalert-postgres
    environment:
      POSTGRES_DB: cryptoalert_db
      POSTGRES_USER: cryptoalert
      POSTGRES_PASSWORD: test123456
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cryptoalert"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cryptoalert-redis
    command: redis-server --requirepass test123456
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Next.js Application
  app:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    container_name: cryptoalert-app
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://cryptoalert:test123456@postgres:5432/cryptoalert_db
      - REDIS_URL=redis://default:test123456@redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=test123456
      - NEXTAUTH_URL=http://localhost:3005
      - NEXTAUTH_SECRET=test-secret-key-for-local-development-only-32chars
      - NEXT_PUBLIC_APP_URL=http://localhost:3005
      - SMTP_HOST=smtp.zoho.com
      - SMTP_PORT=587
      - SMTP_USER=business@cryptoalert.baby
      - SMTP_PASS=your_email_password
      - EMAIL_FROM=business@cryptoalert.baby
    ports:
      - "3005:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
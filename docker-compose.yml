version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: smartfin_postgres
    environment:
      POSTGRES_DB: smartfin_prod
      POSTGRES_USER: smartfin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-smartfin_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - smartfin_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: smartfin_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - smartfin_network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: smartfin_backend
    environment:
      - DATABASE_URL=postgresql://smartfin:${POSTGRES_PASSWORD:-smartfin_password}@postgres:5432/smartfin_prod
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret}
      - ENVIRONMENT=production
    ports:
      - "3456:3456"
    depends_on:
      - postgres
      - redis
    networks:
      - smartfin_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3456/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smartfin_frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3456
      - NEXTAUTH_URL=http://localhost:3000
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-nextauth-secret}
      - DATABASE_URL=postgresql://smartfin:${POSTGRES_PASSWORD:-smartfin_password}@postgres:5432/smartfin_prod
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - smartfin_network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next

  # Nginx Reverse Proxy (Optional - for production)
  nginx:
    image: nginx:alpine
    container_name: smartfin_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - smartfin_network
    restart: unless-stopped
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  smartfin_network:
    driver: bridge